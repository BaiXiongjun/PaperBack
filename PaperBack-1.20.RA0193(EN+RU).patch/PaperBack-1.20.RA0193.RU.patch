Common subdirectories: paperbak-1.10.src/BZLIB and PaperBack-1.20.RA0193(RU).src/BZLIB
diff -u -N paperbak-1.10.src/clean.bat PaperBack-1.20.RA0193(RU).src/clean.bat
--- paperbak-1.10.src/clean.bat	1970-01-01 04:00:00.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/clean.bat	2014-06-25 22:28:10.667600100 +0400
@@ -0,0 +1,5 @@
+del *.obj
+del *.tds
+del *.res
+del *.exe
+del *.ini
diff -u -N paperbak-1.10.src/Controls.cpp PaperBack-1.20.RA0193(RU).src/Controls.cpp
--- paperbak-1.10.src/Controls.cpp	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/Controls.cpp	2014-06-25 22:28:10.671604500 +0400
@@ -36,7 +36,7 @@
 #include "twain.h"
 #pragma hdrstop
 
-#include "paperbak.h"
+#include "paperback.h"
 #include "resource.h"
 
 static HFONT     hfont20;              // 20-point bold font
@@ -97,7 +97,7 @@
           Stopprinting(&printdata);
           Clearqueue();
           Updatebuttons();
-          Message("Processing interrupted",0);
+          Message("Обработка прервана",0);
           break;
         case BTN_PAGE:                 // Page setup button pressed
           Setuppage();
@@ -174,49 +174,49 @@
   dx=(rc->right-rc->left-(7-1)*DELTA)/7;
   x=0;
   // Create Print button.
-  hprint=CreateWindow("BUTTON","Print",
+  hprint=CreateWindow("BUTTON","Печать",
     WS_VISIBLE|WS_CHILD|BS_PUSHBUTTON,
     x,0,dx,BUTTONDY,
     hbuttonframe,(HMENU)BTN_PRINT,hinst,NULL);
   SendMessage(hprint,WM_SETFONT,(WPARAM)GetStockObject(ANSI_VAR_FONT),0);
   x+=dx+DELTA;
   // Create Scan button.
-  hscan=CreateWindow("BUTTON","Scan",
+  hscan=CreateWindow("BUTTON","Сканирование",
     WS_VISIBLE|WS_CHILD|BS_PUSHBUTTON,
     x,0,dx,BUTTONDY,
     hbuttonframe,(HMENU)BTN_SCAN,hinst,NULL);
   SendMessage(hscan,WM_SETFONT,(WPARAM)GetStockObject(ANSI_VAR_FONT),0);
   x+=dx+DELTA;
   // Create Open bitmap button.
-  hopen=CreateWindow("BUTTON","Open bitmap",
+  hopen=CreateWindow("BUTTON","Открыть изображ.",
     WS_VISIBLE|WS_CHILD|BS_PUSHBUTTON,
     x,0,dx,BUTTONDY,
     hbuttonframe,(HMENU)BTN_READ,hinst,NULL);
   SendMessage(hopen,WM_SETFONT,(WPARAM)GetStockObject(ANSI_VAR_FONT),0);
   x+=dx+DELTA;
   // Create Stop button.
-  hstop=CreateWindow("BUTTON","Stop",
+  hstop=CreateWindow("BUTTON","Стоп",
     WS_VISIBLE|WS_CHILD|BS_PUSHBUTTON,
     x,0,dx,BUTTONDY,
     hbuttonframe,(HMENU)BTN_STOP,hinst,NULL);
   SendMessage(hstop,WM_SETFONT,(WPARAM)GetStockObject(ANSI_VAR_FONT),0);
   x+=dx+DELTA;
   // Create Page setup button.
-  hpage=CreateWindow("BUTTON","Page setup",
+  hpage=CreateWindow("BUTTON","Настройки стр.",
     WS_VISIBLE|WS_CHILD|BS_PUSHBUTTON,
     x,0,dx,BUTTONDY,
     hbuttonframe,(HMENU)BTN_PAGE,hinst,NULL);
   SendMessage(hpage,WM_SETFONT,(WPARAM)GetStockObject(ANSI_VAR_FONT),0);
   x+=dx+DELTA;
   // Create Options button.
-  hoptions=CreateWindow("BUTTON","Options",
+  hoptions=CreateWindow("BUTTON","Опции",
     WS_VISIBLE|WS_CHILD|BS_PUSHBUTTON,
     x,0,dx,BUTTONDY,
     hbuttonframe,(HMENU)BTN_OPTIONS,hinst,NULL);
   SendMessage(hoptions,WM_SETFONT,(WPARAM)GetStockObject(ANSI_VAR_FONT),0);
   x+=dx+DELTA;
   // Create Close button. It takes all the remaining space.
-  hclose=CreateWindow("BUTTON","Close",
+  hclose=CreateWindow("BUTTON","Закрыть",
     WS_VISIBLE|WS_CHILD|BS_PUSHBUTTON,
     x,0,rc->right-rc->left-x,BUTTONDY,
     hbuttonframe,(HMENU)BTN_CLOSE,hinst,NULL);
@@ -302,7 +302,7 @@
   // Calculate required height of progress bar.  
   dy=font20height+2*GetSystemMetrics(SM_CXFRAME);
   // Set initial text to display in progress bar.
-  sprintf(message,"PaperBack v%i.%02i",VERSIONHI,VERSIONLO);
+  sprintf(message,"PaperBack v%i.%02i %s",VERSIONHI,VERSIONLO,VERSIONMD);
   showpercent=0;
   // Create bar.
   hprogress=CreateWindowEx(
@@ -545,17 +545,17 @@
   if (hblocksel==NULL)
     return NULL;
   // Create overlay selection radio buttons.
-  hshowgrid=CreateWindow("BUTTON","Show grid",
+  hshowgrid=CreateWindow("BUTTON","Cетка",
     WS_CHILD|WS_VISIBLE|BS_RADIOBUTTON	,
     6,7,100,20,
     hblocksel,(HMENU)BSEL_GRID,hinst,NULL);
   SendMessage(hshowgrid,WM_SETFONT,(WPARAM)GetStockObject(ANSI_VAR_FONT),0);
-  hshowbad=CreateWindow("BUTTON","Show bad dots",
+  hshowbad=CreateWindow("BUTTON","\"Битые\" точки",
     WS_CHILD|WS_VISIBLE|BS_RADIOBUTTON	,
     6,29,100,20,
     hblocksel,(HMENU)BSEL_BAD,hinst,NULL);
   SendMessage(hshowbad,WM_SETFONT,(WPARAM)GetStockObject(ANSI_VAR_FONT),0);
-  hshownone=CreateWindow("BUTTON","No overlay",
+  hshownone=CreateWindow("BUTTON","Без разметки",
     WS_CHILD|WS_VISIBLE|BS_RADIOBUTTON	,
     6,51,100,20,
     hblocksel,(HMENU)BSEL_NONE,hinst,NULL);
@@ -569,22 +569,22 @@
     hblocksel,(HMENU)BSEL_POS,hinst,NULL);
   SendMessage(hpos,WM_SETFONT,(WPARAM)hfont20,0);
   // Create cursor buttons.
-  hleft=CreateWindow("BUTTON","L",
+  hleft=CreateWindow("BUTTON","<",
     WS_CHILD|WS_VISIBLE|BS_PUSHBUTTON,
     rcowner.right-110,23,32,32,
     hblocksel,(HMENU)BSEL_LEFT,hinst,NULL);
   SendMessage(hleft,WM_SETFONT,(WPARAM)hfont20,0);
-  hright=CreateWindow("BUTTON","R",
+  hright=CreateWindow("BUTTON",">",
     WS_CHILD|WS_VISIBLE|BS_PUSHBUTTON,
     rcowner.right-36,23,32,32,
     hblocksel,(HMENU)BSEL_RIGHT,hinst,NULL);
   SendMessage(hright,WM_SETFONT,(WPARAM)hfont20,0);
-  hup=CreateWindow("BUTTON","U",
+  hup=CreateWindow("BUTTON","^",
     WS_CHILD|WS_VISIBLE|BS_PUSHBUTTON,
     rcowner.right-73,5,32,32,
     hblocksel,(HMENU)BSEL_UP,hinst,NULL);
   SendMessage(hup,WM_SETFONT,(WPARAM)hfont20,0);
-  hdown=CreateWindow("BUTTON","D",
+  hdown=CreateWindow("BUTTON","v",
     WS_CHILD|WS_VISIBLE|BS_PUSHBUTTON,
     rcowner.right-73,41,32,32,
     hblocksel,(HMENU)BSEL_DOWN,hinst,NULL);
@@ -651,9 +651,9 @@
   // Add tabs for quality map and block view.
   memset(&titem,0,sizeof(titem));
   titem.mask=TCIF_TEXT;
-  titem.pszText="Quality map";
+  titem.pszText="Карта качества";
   SendMessage(hdatatab,TCM_INSERTITEM,DISP_QUALITY,(LPARAM)&titem);
-  titem.pszText="Blocks";
+  titem.pszText="Блоки";
   SendMessage(hdatatab,TCM_INSERTITEM,DISP_BLOCK,(LPARAM)&titem);
   // Create brushes to display quality map. 0 errors: green; 16 errors (maximum
   // allowed by implemented version of ECC): red; unrecoverable blocks: black.
@@ -953,15 +953,15 @@
   else {
     n=sprintf(s,"(%i,%i)\n",posx,posy);
     if (answer<0)
-      sprintf(s+n,"No frame");
+      sprintf(s+n,"Нет рамки");
     else if (answer==0)
-      sprintf(s+n,"Good");
+      sprintf(s+n,"Хороший");
     else if (answer==1)
-      sprintf(s+n,"1 byte bad");
+      sprintf(s+n,"1 сбой");
     else if (answer<17)
-      sprintf(s+n,"%i bytes bad",answer);
+      sprintf(s+n,"%i сбой(я)",answer);
     else
-      sprintf(s+n,"Unreadable");
+      sprintf(s+n,"Нечитаемый");
     SetWindowText(hpos,s);
   };
 };
@@ -1078,7 +1078,7 @@
           Message("",0);
           break;
         case INFO_SAVE:                // Save button pressed
-          Saverestoredfile(slot,0);
+          Saverestoredfile(slot,acceptbroken);
         break;
       };
       break;
@@ -1139,7 +1139,7 @@
   memset(&titem,0,sizeof(titem));
   titem.mask=TCIF_TEXT;
   for (i=0; i<NFILE; i++) {
-    sprintf(s,"File %i",i+1);
+    sprintf(s,"Файл %i",i+1);
     titem.pszText=s;
     SendMessage(hinfotab,TCM_INSERTITEM,i,(LPARAM)&titem); };
   // Get working rectangle of info tab window.
@@ -1150,20 +1150,20 @@
   x=rci.left+10;
   y=rci.top+30;
   // File name.
-  htemp=CreateWindow("STATIC","File",
+  htemp=CreateWindow("STATIC","Файл",
     WS_CHILD|WS_VISIBLE|SS_LEFT,
     x,y+1,50,22,
     hinfotab,NULL,hinst,NULL);
   SendMessage(htemp,WM_SETFONT,(WPARAM)hfont20,0);
   hdataname=CreateWindowEx(WS_EX_STATICEDGE,
-    "STATIC"," (None)",
+    "STATIC"," (Нет)",
     WS_CHILD|WS_VISIBLE|SS_LEFTNOWORDWRAP,
     x+50,y,rci.right-x-60,font20height+4,
     hinfotab,NULL,hinst,NULL);
   SendMessage(hdataname,WM_SETFONT,(WPARAM)hfont20,0);
   y+=font20height+24;
   // Original file size.
-  htemp=CreateWindow("STATIC","Original size",
+  htemp=CreateWindow("STATIC","Исх. размер",
     WS_CHILD|WS_VISIBLE|SS_LEFT,
     x,y+1,140,22,
     hinfotab,NULL,hinst,NULL);
@@ -1176,7 +1176,7 @@
   SendMessage(horigsize,WM_SETFONT,(WPARAM)hfont20,0);
   y+=font20height+12;
   // Date of last modification.
-  htemp=CreateWindow("STATIC","Modified on",
+  htemp=CreateWindow("STATIC","Изменён",
     WS_CHILD|WS_VISIBLE|SS_LEFT,
     x,y+1,140,22,
     hinfotab,NULL,hinst,NULL);
@@ -1189,7 +1189,7 @@
   SendMessage(hmoddate,WM_SETFONT,(WPARAM)hfont20,0);
   y+=font20height+12;
   // Number of pages.
-  htemp=CreateWindow("STATIC","Total pages",
+  htemp=CreateWindow("STATIC","Всего страниц",
     WS_CHILD|WS_VISIBLE|SS_LEFT,
     x,y+1,140,22,
     hinfotab,NULL,hinst,NULL);
@@ -1202,7 +1202,7 @@
   SendMessage(hpagecount,WM_SETFONT,(WPARAM)hfont20,0);
   y+=font20height+24;
   // Number of good blocks so far.
-  htemp=CreateWindow("STATIC","Good blocks",
+  htemp=CreateWindow("STATIC","Хор. блоков",
     WS_CHILD|WS_VISIBLE|SS_LEFT,
     x,y+1,140,22,
     hinfotab,NULL,hinst,NULL);
@@ -1215,7 +1215,7 @@
   SendMessage(hgoodcount,WM_SETFONT,(WPARAM)hfont20,0);
   y+=font20height+12;
   // Number of bad blocks so far.
-  htemp=CreateWindow("STATIC","Bad blocks",
+  htemp=CreateWindow("STATIC","\"Битых\" блок.",
     WS_CHILD|WS_VISIBLE|SS_LEFT,
     x,y+1,140,22,
     hinfotab,NULL,hinst,NULL);
@@ -1228,7 +1228,7 @@
   SendMessage(hbadcount,WM_SETFONT,(WPARAM)hfont20,0);
   y+=font20height+12;
   // Total number of bytes corrected by ECC.
-  htemp=CreateWindow("STATIC","ECC corrections",
+  htemp=CreateWindow("STATIC","ECC-коррекций",
     WS_CHILD|WS_VISIBLE|SS_LEFT,
     x,y+1,140,22,
     hinfotab,NULL,hinst,NULL);
@@ -1241,7 +1241,7 @@
   SendMessage(hcorrcount,WM_SETFONT,(WPARAM)hfont20,0);
   y+=font20height+24;
   // List of pages to scan.
-  htemp=CreateWindow("STATIC","Pages to scan",
+  htemp=CreateWindow("STATIC","Осталось скан.",
     WS_CHILD|WS_VISIBLE|SS_LEFT,
     x,y+1,140,22,
     hinfotab,NULL,hinst,NULL);
@@ -1260,13 +1260,13 @@
     x,y,rci.right-x-10,BUTTONDY,
     hinfotab,NULL,hinst,NULL);
   // Create Discard and Save button.
-  hdiscard=CreateWindow("BUTTON","Discard",
+  hdiscard=CreateWindow("BUTTON","Отказаться",
     WS_VISIBLE|WS_CHILD|BS_PUSHBUTTON,
     0,0,(rci.right-x-20)/2,BUTTONDY,
     hinfobtns,(HMENU)INFO_DISCARD,hinst,NULL);
   SendMessage(hdiscard,WM_SETFONT,(WPARAM)GetStockObject(ANSI_VAR_FONT),0);
   EnableWindow(hdiscard,0);
-  hsavedata=CreateWindow("BUTTON","Save",
+  hsavedata=CreateWindow("BUTTON","Сохранить",
     WS_VISIBLE|WS_CHILD|BS_PUSHBUTTON,
     (rci.right-x-20)/2+10,0,(rci.right-x-20)/2,BUTTONDY,
     hinfobtns,(HMENU)INFO_SAVE,hinst,NULL);
@@ -1282,7 +1282,7 @@
   SendMessage(hinfotab,TCM_SETCURSEL,slot,0);
   if (fproc->name[0]=='\0') {
     // Special case: empty descriptor.
-    SetWindowText(hdataname," (None)");
+    SetWindowText(hdataname," (Нет)");
     SetWindowText(horigsize,"");
     SetWindowText(hmoddate,"");
     SetWindowText(hpagecount,"");
@@ -1297,7 +1297,7 @@
     memcpy(s+1,fproc->name,64); s[0]=' '; s[65]='\0';
     SetWindowText(hdataname,s);
     // Original data size.
-    sprintf(s," %u bytes",fproc->origsize);
+    sprintf(s," %u байт",fproc->origsize);
     SetWindowText(horigsize,s);
     // Date of last modification.
     Filetimetotext(&fproc->modified,s+1,TEXTLEN-1); s[0]=' ';
@@ -1312,7 +1312,7 @@
     sprintf(s," %u",fproc->badblocks);
     SetWindowText(hbadcount,s);
     // Number of corrected bytes.
-    sprintf(s," %u bytes",fproc->restoredbytes);
+    sprintf(s," %u байт",fproc->restoredbytes);
     SetWindowText(hcorrcount,s);
     // List of pages to process (up to 7).
     n=0; s[0]='\0';
@@ -1323,11 +1323,11 @@
     if (i==7 && fproc->rempages[i]!=0)
       sprintf(s+n,"...");
     else if (i==0 && fproc->ndata==fproc->nblock)
-      sprintf(s," Finished, press \"Save\"");
+      sprintf(s," Завершено, нажмите \"Сохранить\"");
     SetWindowText(hpagelist,s);
     // Enable or disable buttons.
     EnableWindow(hdiscard,1);
-    EnableWindow(hsavedata,fproc->ndata==fproc->nblock);
+    EnableWindow(hsavedata,fproc->ndata==fproc->nblock || acceptbroken);
   };
 };
 
@@ -1349,7 +1349,7 @@
   hfont20=CreateFont(
     20,0,0,0,FW_BOLD,
     FALSE,FALSE,FALSE,
-    ANSI_CHARSET,OUT_TT_PRECIS,
+    RUSSIAN_CHARSET,OUT_TT_PRECIS,
     CLIP_DEFAULT_PRECIS,PROOF_QUALITY,
     DEFAULT_PITCH|FF_SWISS|0x04,NULL);
   if (hfont20==NULL)                   // Emergency action
diff -u -N paperbak-1.10.src/Crc16.cpp PaperBack-1.20.RA0193(RU).src/Crc16.cpp
--- paperbak-1.10.src/Crc16.cpp	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/Crc16.cpp	2014-06-25 22:28:10.673606900 +0400
@@ -36,7 +36,7 @@
 #include "twain.h"
 #pragma hdrstop
 
-#include "paperbak.h"
+#include "paperback.h"
 #include "resource.h"
 
 
Common subdirectories: paperbak-1.10.src/CRYPTO and PaperBack-1.20.RA0193(RU).src/CRYPTO
diff -u -N paperbak-1.10.src/Decoder.cpp PaperBack-1.20.RA0193(RU).src/Decoder.cpp
--- paperbak-1.10.src/Decoder.cpp	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/Decoder.cpp	2014-06-25 22:28:10.676610000 +0400
@@ -36,7 +36,7 @@
 #include "twain.h"
 #pragma hdrstop
 
-#include "paperbak.h"
+#include "paperback.h"
 #include "resource.h"
 
 #define NHYST          1024            // Number of points in histogramm
@@ -266,7 +266,7 @@
   data=pdata->data;
   // Check overall bitmap size.
   if (sizex<=3*NDOT || sizey<=3*NDOT) {
-    Reporterror("Bitmap is too small to process");
+    Reporterror("Изображение имеет слишком малые размеры");
     pdata->step=0; return; };
   // Select horizontal and vertical lines (at most 256 in each direction) to
   // check for grid location.
@@ -363,7 +363,7 @@
     sum+=distrc[cmax];
     if (sum>=limit) break; };
   if (cmax-cmin<1) {
-    Reporterror("No image");
+    Reporterror("Нет изображения");
     pdata->step=0;
     return; };
   // Estimate image sharpness. The factor is rather empirical. Later, when
@@ -439,7 +439,7 @@
   };
   // Analyse and save results.
   if (maxweight==0.0 || bestxstep<NDOT) {
-    Reporterror("No grid");
+    Reporterror("Сетка не обнаружена");
     pdata->step=0;
     return; };
   pdata->xpeak=bestxpeak;
@@ -502,7 +502,7 @@
     bestystep<pdata->xstep*0.40 ||
     bestystep>pdata->xstep*2.50
   ) {
-    Reporterror("No grid");
+    Reporterror("Сетка не обнаружена");
     pdata->step=0;
     return; };
   pdata->ypeak=bestypeak;
@@ -574,7 +574,7 @@
     if (pdata->bufx!=NULL) GlobalFree((HGLOBAL)pdata->bufx);
     if (pdata->bufy!=NULL) GlobalFree((HGLOBAL)pdata->bufy);
     if (pdata->blocklist!=NULL) GlobalFree((HGLOBAL)pdata->blocklist);
-    Reporterror("Low memory");
+    Reporterror("Недостаточно памяти (ОЗУ)");
     pdata->step=0;
     return; };
   // Determine maximal size of the dot on the bitmap.
@@ -820,9 +820,9 @@
   t_data result;
   // Display percent of executed data and, if known, data name in progress bar.
   if (pdata->superblock.name[0]=='\0')
-    sprintf(s,"Processing image");
+    sprintf(s,"Обработка изображения...");
   else
-    sprintf(s,"%.64s (page %i)",
+    sprintf(s,"%.64s (стр. %i)",
     pdata->superblock.name,pdata->superblock.page);
   percent=(pdata->posy*pdata->nposx+pdata->posx)*100/
     (pdata->nposx*pdata->nposy);
@@ -889,7 +889,7 @@
   int i,fileindex;
   // Pass gathered data to file processor.
   if (pdata->superblock.addr==0)
-    Reporterror("Page label is not readable");
+    Reporterror("Маркер страницы нечитаем");
   else {
     fileindex=Startnextpage(&pdata->superblock);
     if (fileindex>=0) {
@@ -920,14 +920,14 @@
       pdata->step++;
       break;
     case 2:                            // Determine grid size
-      Message("Searching for raster...",0);
+      Message("Поиск растра...",0);
       Getgridposition(pdata);
       break;
     case 3:                            // Determine min and max intensity
       Getgridintensity(pdata);
       break;
     case 4:                            // Determine step and angle in X
-      Message("Searching for grid lines...",0);
+      Message("Поиск сетки...",0);
       Getxangle(pdata);
       break;
     case 5:                            // Determine step and angle in Y
@@ -996,4 +996,3 @@
     pdata->step=0;
   };
 };
-
diff -u -N paperbak-1.10.src/Fileproc.cpp PaperBack-1.20.RA0193(RU).src/Fileproc.cpp
--- paperbak-1.10.src/Fileproc.cpp	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/Fileproc.cpp	2014-06-25 22:28:10.679613600 +0400
@@ -38,7 +38,7 @@
 #include "CRYPTO/pwd2key.h"
 #pragma hdrstop
 
-#include "paperbak.h"
+#include "paperback.h"
 #include "resource.h"
 
 
@@ -85,7 +85,7 @@
   if (slot>=NFILE) {
     // No matching descriptor, create new one.
     if (freeslot<0) {
-      Reporterror("Maximal number of processed files exceeded");
+      Reporterror("Превышено максимальное количество файлов");
       return -1; };
     slot=freeslot;
     pf=fproc+slot;
@@ -97,7 +97,7 @@
     if (pf->datavalid==NULL || pf->data==NULL) {
       if (pf->datavalid!=NULL) GlobalFree((HGLOBAL)pf->datavalid);
       if (pf->data!=NULL) GlobalFree((HGLOBAL)pf->data);
-      Reporterror("Low memory");
+      Reporterror("Недостаточно памяти (ОЗУ)");
       return -1; };
     // Initialize remaining fields.
     memcpy(pf->name,superblock->name,64);
@@ -233,13 +233,13 @@
   // Check whether there are still bad blocks on the page.
   firstblock=(pf->page-1)*(pf->pagesize/NDATA);
   for (j=firstblock; j<firstblock+(int)(pf->pagesize/NDATA) && j<pf->nblock; j++) {
-    if (pf->datavalid[j]!=1) break; };
+    if (pf->datavalid[j]!=1 && !acceptbroken) break; };
   if (j<firstblock+(int)(pf->pagesize/NDATA) && j<pf->nblock)
-    Message("Unrecoverable errors on page, please scan it again",0);
-  else if (nbad>0)
-    Message("Page processed, all bad blocks successfully restored",0);
+    Message("Неисправимые ошибки на странице, отсканируйте её снова",0);
+  else if (nbad>0 && !acceptbroken)
+    Message("Страница обработана, все \"битые\" блоки восстановлены",0);
   else
-    Message("Page processed",0);
+    Message("Страница обработана",0);
   // Calculate list of (partially) incomplete pages.
   nrempages=0;
   if (pf->pagesize>0) {
@@ -259,9 +259,9 @@
   Updatefileinfo(slot,pf);
   if (pf->ndata==pf->nblock) {
     if (autosave==0)
-      Message("File restored. Press \"Save\" to save it to disk",0);
+      Message("Файл восстановлен. Нажмите \"Сохранить\" для его записи",0);
     else {
-      Message("File complete",0);
+      Message("Файл восстановлен",0);
       Saverestoredfile(slot,0);
     };
   };
@@ -291,13 +291,13 @@
   // is possible, but the whole data would be lost if password is incorrect.
   if (pf->mode & PBM_ENCRYPTED) {
     if (pf->datasize & 0x0000000F) {
-      Reporterror("Encrypted data is not aligned");
+      Reporterror("Зашифрованные данные не выровнены");
       return -1; };
     if (Getpassword()!=0)
       return -1;                       // User cancelled decryption
     tempdata=(uchar *)GlobalAlloc(GMEM_FIXED,pf->datasize);
     if (tempdata==NULL) {
-      Reporterror("Low memory, can't decrypt data");
+      Reporterror("Недостаточно памяти (ОЗУ), не могу расшифровать данные");
       return -1; };
     n=strlen(password);
     salt=(uchar *)(pf->name)+32; // hack: put the salt & iv at the end of the name field
@@ -306,18 +306,18 @@
     memset(ctx,0,sizeof(aes_decrypt_ctx));
     if(aes_decrypt_key((const uchar *)key,AESKEYLEN,ctx) == EXIT_FAILURE) {
       memset(key,0,AESKEYLEN);
-      Reporterror("Failed to set decryption key");
+      Reporterror("Не удалось установить ключ дешифрования");
       return -1; };
     memset(key,0,AESKEYLEN);
     memcpy(iv, salt+16, 16); // the second 16-byte block in 'salt' is the IV
     if(aes_cbc_decrypt(pf->data,tempdata,pf->datasize,iv,ctx) == EXIT_FAILURE) {
-      Reporterror("Failed to decrypt data");
+      Reporterror("Не удалось расшифровать данные");
       memset(ctx,0,sizeof(aes_decrypt_ctx));
       return -1; };
     memset(ctx,0,sizeof(aes_decrypt_ctx));
     filecrc=Crc16(tempdata,pf->datasize);
-    if (filecrc!=pf->filecrc) {
-      Reporterror("Invalid password, please try again");
+    if (filecrc!=(ushort)pf->filecrc) {
+      Reporterror("Неправильный пароль, попробуйте снова");
       GlobalFree((HGLOBAL)tempdata);
       return -1; }
     else {
@@ -337,15 +337,15 @@
       pf->origsize=pf->datasize*4;     // Weak attempt to recover
     bufout=(uchar *)GlobalAlloc(GMEM_FIXED,pf->origsize);
     if (bufout==NULL) {
-      Reporterror("Low memory");
+      Reporterror("Недостаточно памяти (ОЗУ)");
       return -1; };
     // Unpack data.
     length=pf->origsize;
     success=BZ2_bzBuffToBuffDecompress((char *)bufout,(uint *)&length,
-      pf->data,pf->datasize,0,0);
+      (char *)pf->data,pf->datasize,0,0);
     if (success!=BZ_OK) {
       GlobalFree((HGLOBAL)bufout);
-      Reporterror("Unable to unpack data");
+      Reporterror("Не удаётся распаковать данные");
       return -1; };
     data=bufout; };
   // Ask user for file name.
@@ -357,7 +357,7 @@
     CREATE_ALWAYS,FILE_ATTRIBUTE_NORMAL,NULL);
   if (hfile==INVALID_HANDLE_VALUE) {
     if (bufout!=NULL) GlobalFree((HGLOBAL)bufout);
-    Reporterror("Unable to create file");
+    Reporterror("Не удаётся создать файл");
     return -1; };
   WriteFile(hfile,data,length,&l,NULL);
   // Restore old modification date and time.
@@ -367,11 +367,11 @@
   SetFileAttributes(outfile,pf->attributes);
   if (bufout!=NULL) GlobalFree((HGLOBAL)bufout);
   if (l!=length) {
-    Reporterror("I/O error");
+    Reporterror("Ошибка I/O");
     return -1; };
   // Close file descriptor and report success.
   Closefproc(slot);
-  Message("File saved",0);
+  Message("Файл сохранён",0);
   return 0;
 };
 
diff -u -N paperbak-1.10.src/Main.cpp PaperBack-1.20.RA0193(RU).src/Main.cpp
--- paperbak-1.10.src/Main.cpp	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/Main.cpp	2014-06-25 22:28:10.682618100 +0400
@@ -37,7 +37,7 @@
 #pragma hdrstop
 
 #define MAINPROG
-#include "paperbak.h"
+#include "paperback.h"
 #include "resource.h"
 
 ////////////////////////////////////////////////////////////////////////////////
@@ -75,9 +75,10 @@
   char s[1024];
   switch (msg) {
     case WM_INITDIALOG:
-      sprintf(s,"\nPaperBack v%i.%02i\n"
+      sprintf(s,"\nPaperBack v%i.%02i %s\n"
         "Copyright © 2007 Oleh Yuschuk\n"
-        "Parts copyright © 2013 Michael Mohr\n\n"
+        "Parts copyright © 2013 Michael Mohr\n"
+        "Parts copyright © 2014 Artem Drobanov\n\n"
         "----- THIS SOFTWARE IS FREE -----\n"
         "Released under GNU Public License (GPL 3+)\n"
         "Full sources available\n\n"
@@ -87,7 +88,7 @@
         "Copyright © 1996-2010 Julian R. Seward (see sources)\n\n"
         "AES and SHA code:\n"
         "Copyright © 1998-2010, Brian Gladman (3-clause BSD)",
-        VERSIONHI,VERSIONLO);
+        VERSIONHI,VERSIONLO,VERSIONMD);
       SetDlgItemText(hw,ABOUT_TEXT,s);
       return TRUE;
     case WM_COMMAND:
@@ -147,9 +148,9 @@
       comprset=0;
       SendMessage(GetDlgItem(hw,OPT_COMPRESS),CB_SETEXTENDEDUI,1,0);
       for (i=0; i<3; i++) {
-        if (i==0) strcpy(s,"None");
-        else if (i==1) strcpy(s,"Fast");
-        else strcpy(s,"Maximal");
+        if (i==0) strcpy(s,"Нет");
+        else if (i==1) strcpy(s,"Быстрое");
+        else strcpy(s,"Макс.");
         SendMessage(GetDlgItem(hw,OPT_COMPRESS),CB_ADDSTRING,0,(LPARAM)s);
         if (comprset==0 && (i==compression || i==2)) {
           SendMessage(GetDlgItem(hw,OPT_COMPRESS),CB_SELECTSTRING,0,(LPARAM)s);
@@ -178,6 +179,8 @@
       CheckDlgButton(hw,OPT_AUTOSAVE,(autosave?BST_CHECKED:BST_UNCHECKED));
       // Initialize best quality checkbox.
       CheckDlgButton(hw,OPT_HIQ,(bestquality?BST_CHECKED:BST_UNCHECKED));
+      // Initialize accept broken pages checkbox.
+      CheckDlgButton(hw,OPT_BROKEN,(acceptbroken?BST_CHECKED:BST_UNCHECKED));
       // Initialize encryption checkbox.
       CheckDlgButton(hw,OPT_ENCRYPT,(encryption?BST_CHECKED:BST_UNCHECKED));
       // Initialize open text checkbox.
@@ -206,6 +209,8 @@
         autosave=(IsDlgButtonChecked(hw,OPT_AUTOSAVE)==BST_CHECKED);
         // Get best quality option.
         bestquality=(IsDlgButtonChecked(hw,OPT_HIQ)==BST_CHECKED);
+        // Get accept broken pages option.
+        acceptbroken=(IsDlgButtonChecked(hw,OPT_BROKEN)==BST_CHECKED);
         // Get encryption option.
         encryption=(IsDlgButtonChecked(hw,OPT_ENCRYPT)==BST_CHECKED);
         // Get open text option.
@@ -245,7 +250,7 @@
         GetDlgItemText(hw,PAS_ENTER,password,PASSLEN);
         GetDlgItemText(hw,PAS_CONFIRM,passcopy,PASSLEN);
         if (strcmp(password,passcopy)!=0) {
-          SetDlgItemText(hw,PAS_TEXT,"Different passwords. Please try again:");
+          SetDlgItemText(hw,PAS_TEXT,"Пароли не совпадают. Попробуйте снова:");
           SetDlgItemText(hw,PAS_ENTER,"");
           SetDlgItemText(hw,PAS_CONFIRM,"");
           break; };
@@ -332,7 +337,6 @@
 LRESULT CALLBACK Mainwp(HWND hw,UINT msg,WPARAM wp,LPARAM lp) {
   int i,n;
   char path[MAXPATH],ext[MAXEXT];
-  HDC dc;
   PAINTSTRUCT ps;
   switch (msg) {
     case WM_CREATE:
@@ -398,7 +402,7 @@
       DragFinish((HDROP)wp);
       break;
     case WM_PAINT:
-      dc=BeginPaint(hw,&ps);
+      BeginPaint(hw,&ps);
       // Hey, do we have anything to do here? Background is already OK.
       EndPaint(hw,&ps);
       break;
@@ -438,6 +442,7 @@
   printborder=GetPrivateProfileInt("Settings","Border",0,inifile);
   autosave=GetPrivateProfileInt("Settings","Autosave",1,inifile);
   bestquality=GetPrivateProfileInt("Settings","Best quality",1,inifile);
+  acceptbroken=GetPrivateProfileInt("Settings","Accept broken pages",0,inifile);
   encryption=GetPrivateProfileInt("Settings","Encryption",0,inifile);
   opentext=GetPrivateProfileInt("Settings","Open password",0,inifile);
   // Get printer's page size.
@@ -544,6 +549,8 @@
     WritePrivateProfileString("Settings","Autosave",s,inifile);
   sprintf(s,"%i",bestquality);
     WritePrivateProfileString("Settings","Best quality",s,inifile);
+  sprintf(s,"%i",acceptbroken);
+    WritePrivateProfileString("Settings","Accept broken pages",s,inifile);
   sprintf(s,"%i",encryption);
     WritePrivateProfileString("Settings","Encryption",s,inifile);
   sprintf(s,"%i",opentext);
diff -u -N paperbak-1.10.src/OPTIONS.RC PaperBack-1.20.RA0193(RU).src/OPTIONS.RC
--- paperbak-1.10.src/OPTIONS.RC	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/OPTIONS.RC	1970-01-01 04:00:00.000000000 +0400
@@ -1,42 +0,0 @@
-/****************************************************************************
-
-
-options.rc
-
-produced by Borland Resource Workshop
-
-
-*****************************************************************************/
-
-#define DIALOG_1	1
-#define IDC_COMBOBOX1	101
-#define IDC_COMBOBOX2	106
-#define IDC_CHECKBOX2	107
-#define IDC_CHECKBOX3	108
-#define IDC_CHECKBOX1	102
-#define IDC_RADIOBUTTON1	103
-#define IDC_RADIOBUTTON2	104
-#define IDC_RADIOBUTTON3	105
-DIALOG_1 DIALOG 15, 35, 262, 140
-STYLE DS_MODALFRAME | WS_POPUP | WS_VISIBLE | WS_CAPTION | WS_SYSMENU
-CAPTION "Options"
-FONT 8, "MS Sans Serif"
-{
- LTEXT "Printing options", -1, 6, 6, 60, 9
- CONTROL "", -1, "static", SS_BLACKFRAME | WS_CHILD | WS_VISIBLE, 6, 18, 123, 93
- LTEXT "Dot density", -1, 12, 27, 42, 9
- COMBOBOX IDC_COMBOBOX1, 57, 24, 39, 114, CBS_DROPDOWN | WS_TABSTOP
- LTEXT "dots/in", -1, 99, 27, 27, 9
- LTEXT "Compression", -1, 12, 42, 45, 9
- CONTROL "None", IDC_RADIOBUTTON1, "BUTTON", BS_AUTORADIOBUTTON, 60, 42, 36, 9
- CONTROL "Fast", IDC_RADIOBUTTON2, "BUTTON", BS_AUTORADIOBUTTON, 60, 54, 36, 9
- CONTROL "Best", IDC_RADIOBUTTON3, "BUTTON", BS_AUTORADIOBUTTON, 60, 66, 36, 9
- LTEXT "Redundancy", -1, 12, 81, 45, 9
- COMBOBOX IDC_COMBOBOX2, 57, 78, 39, 72, CBS_DROPDOWN | WS_TABSTOP
- CHECKBOX "Encrypt data", IDC_CHECKBOX1, 12, 93, 60, 12, BS_AUTOCHECKBOX | WS_DISABLED | WS_TABSTOP
- LTEXT "Decoding options", -1, 132, 6, 60, 9
- CONTROL "", -1, "static", SS_BLACKFRAME | WS_CHILD | WS_VISIBLE, 132, 18, 123, 93
- CHECKBOX "Autosave complete files", IDC_CHECKBOX2, 138, 24, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
- CHECKBOX "Determine best quality", IDC_CHECKBOX3, 138, 39, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
- DEFPUSHBUTTON "OK", IDOK, 106, 120, 50, 14
-}
diff -u -N paperbak-1.10.src/paperback.h PaperBack-1.20.RA0193(RU).src/paperback.h
--- paperbak-1.10.src/paperback.h	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/paperback.h	2014-06-25 22:28:10.685621200 +0400
@@ -24,7 +24,8 @@
 #endif
 
 #define VERSIONHI      1               // Major version
-#define VERSIONLO      10              // Minor version
+#define VERSIONLO      20              // Minor version
+#define VERSIONMD      "(RA0193)"      // Modifier of version
 
 #define MAINDX         800             // Max width of the main window, pixels
 #define MAINDY         600             // Max height of the main window, pixels
@@ -374,6 +375,7 @@
 unique int       printborder;          // Border around bitmap
 unique int       autosave;             // Autosave completed files
 unique int       bestquality;          // Determine best quality
+unique int       acceptbroken;         // Accept broken pages
 unique int       encryption;           // Encrypt data before printing
 unique int       opentext;             // Enter passwords in open text
 
diff -u -N paperbak-1.10.src/paperback.mak PaperBack-1.20.RA0193(RU).src/paperback.mak
--- paperbak-1.10.src/paperback.mak	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/paperback.mak	2014-06-25 22:28:10.687624500 +0400
@@ -13,10 +13,10 @@
 
 VERSION = BCB.05.03
 # ---------------------------------------------------------------------------
-PROJECT = PaperBak.exe
+PROJECT = PaperBackRU.exe
 OBJFILES = Main.obj Ecc.obj Crc16.obj Printer.obj Decoder.obj \
     Fileproc.obj Controls.obj Scanner.obj Service.obj
-RESFILES = PaperBak.res Resource.res
+RESFILES = RESOURCE.RES
 MAINSOURCE = Main.cpp
 RESDEPEN = $(RESFILES)
 LIBFILES = 
Files paperbak-1.10.src/PAPERBAK.RES and PaperBack-1.20.RA0193(RU).src/PAPERBAK.RES differ
diff -u -N paperbak-1.10.src/Printer.cpp PaperBack-1.20.RA0193(RU).src/Printer.cpp
--- paperbak-1.10.src/Printer.cpp	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/Printer.cpp	2014-06-26 20:18:56.758690400 +0400
@@ -38,7 +38,7 @@
 #include "CRYPTO/pwd2key.h"
 #pragma hdrstop
 
-#include "paperbak.h"
+#include "paperback.h"
 #include "resource.h"
 
 // Initializes printer settings. This operation is done blindly, without
@@ -280,7 +280,7 @@
   print->hfile=CreateFile(print->infile,GENERIC_READ,FILE_SHARE_READ,
     NULL,OPEN_EXISTING,FILE_ATTRIBUTE_NORMAL,NULL);
   if (print->hfile==INVALID_HANDLE_VALUE) {
-    Reporterror("Unable to open file");
+    Reporterror("Не удаётся открыть файл");
     Stopprinting(print);
     return; };
   // Get time of last file modification.
@@ -292,7 +292,7 @@
   // Get original (uncompressed) file size.
   print->origsize=GetFileSize(print->hfile,&l);
   if (print->origsize==0 || print->origsize>MAXSIZE || l!=0) {
-    Reporterror("Invalid file size");
+    Reporterror("Неправильный размер файла");
     Stopprinting(print);
     return; };
   print->readsize=0;
@@ -302,14 +302,14 @@
   print->bufsize=(print->origsize+15) & 0xFFFFFFF0;
   print->buf=(uchar *)GlobalAlloc(GMEM_FIXED,print->bufsize);
   if (print->buf==NULL) {
-    Reporterror("Low memory");
+    Reporterror("Недостаточно памяти (ОЗУ)");
     Stopprinting(print);
     return; };
   // Allocate read buffer. Because compression may take significant time, I
   // pack data in pieces of PACKLEN bytes.
   print->readbuf=(uchar *)GlobalAlloc(GMEM_FIXED,PACKLEN);
   if (print->readbuf==NULL) {
-    Reporterror("Low memory");
+    Reporterror("Недостаточно памяти (ОЗУ)");
     Stopprinting(print);
     return; };
   // Set options.
@@ -352,18 +352,18 @@
   if (size>PACKLEN) size=PACKLEN;
   success=ReadFile(print->hfile,print->readbuf,size,&l,NULL);
   if (success==0 || l!=size) {
-    Reporterror("Unable to read file");
+    Reporterror("Не удаётся считать файл");
     Stopprinting(print);
     return; };
   // If compression is active, compress next piece of data. Otherwise, just
   // copy data to buffer.
   if (print->compression) {
-    Message("Compressing file",(print->readsize+size)*100/print->origsize);
+    Message("Сжатие файла",(print->readsize+size)*100/print->origsize);
     print->bzstream.next_in=(char *)print->readbuf;
     print->bzstream.avail_in=size;
     success=BZ2_bzCompress(&print->bzstream,BZ_RUN);
     if (print->bzstream.avail_in!=0 || success!=BZ_RUN_OK) {
-      Reporterror("Unable to compress data. Try to disable compression.");
+      Reporterror("Не удаётся сжать данные. Попробуйте отключить компрессию.");
       Stopprinting(print);
       return; };
     print->readsize+=size;
@@ -377,7 +377,7 @@
       return;
     }; }
   else {
-    Message("Reading file",(print->readsize+size)*100/print->origsize);
+    Message("Считывание файла",(print->readsize+size)*100/print->origsize);
     memcpy(print->buf+print->readsize,print->readbuf,size);
     print->readsize+=size; };
   // If all data is read, finish step.
@@ -404,7 +404,7 @@
       return; };
     // If compression routine reports other error, stop processing.
     if (success!=BZ_STREAM_END) {
-      Reporterror("Unable to compress data. Try to disable compression.");
+      Reporterror("Не удаётся сжать данные. Попробуйте отключить компрессию.");
       Stopprinting(print);
       return; };
     // File compressed. Update size of compressed data and finish.
@@ -456,7 +456,7 @@
     print->step++;
     return; };
   // Ask for password. If user cancels, skip file.
-  Message("Encrypting data...",0);
+  Message("Шифрование данных...",0);
   if (Confirmpassword()!=0) {          // User cancelled encryption
     Message("",0);
     Stopprinting(print);
@@ -471,7 +471,7 @@
   n=strlen(password);
   salt=(uchar *)(print->superdata.name)+32; // hack: put the salt & iv at the end of the name field
   if(GenerateRandomData(32, salt) == FALSE) {
-    Message("Failed to generate salt/iv",0);
+    Message("Не удалось сгенерировать salt/iv",0);
     Stopprinting(print);
     return; };
   derive_key((const uchar *)password, n, salt, 16, 524288, key, AESKEYLEN);
@@ -480,7 +480,7 @@
   memset(ctx,0,sizeof(aes_encrypt_ctx));
   if(aes_encrypt_key((const uchar *)key, AESKEYLEN, ctx) == EXIT_FAILURE) {
     memset(key,0,AESKEYLEN);
-    Message("Failed to set encryption key",0);
+    Message("Не удалось установить ключ шифрования",0);
     Stopprinting(print);
     return; };
   memset(key,0,AESKEYLEN);
@@ -488,7 +488,7 @@
   memcpy(iv, salt+16, 16); // the second 16-byte block in 'salt' is the IV
   if(aes_cbc_encrypt(print->buf, print->buf, print->alignedsize, iv, ctx) == EXIT_FAILURE) {
     memset(ctx,0,sizeof(aes_encrypt_ctx));
-    Message("Failed to encrypt data",0);
+    Message("Не удалось зашифровать данные",0);
     Stopprinting(print);
     return; };
   // Clear password and encryption control block. We no longer need them.
@@ -563,13 +563,13 @@
       Stopprinting(print);
       return; };
     if (print->dc==NULL) {             // Prointer DC is unavailable
-      Reporterror("Unable to access printer");
+      Reporterror("Не удаётся получить доступ к принтеру");
       Stopprinting(print);
       return; };
     // Assure that printer is capable of displaying bitmaps.
     rastercaps=GetDeviceCaps(print->dc,RASTERCAPS);
     if ((rastercaps & RC_DIBTODEV)==0) {
-      Reporterror("The selected printer can't print bitmaps");
+      Reporterror("Выбранный принтер не может печатать изображения");
       Stopprinting(print);
       return; };
     // Get resolution and size of print area in pixels.
@@ -582,10 +582,10 @@
     // invisible with printer's resolution.
     if (print->printheader) {
       print->hfont6=CreateFont(print->ppiy/6,0,0,0,FW_LIGHT,0,0,0,
-        ANSI_CHARSET,OUT_TT_PRECIS,CLIP_DEFAULT_PRECIS,
+        RUSSIAN_CHARSET,OUT_TT_PRECIS,CLIP_DEFAULT_PRECIS,
         PROOF_QUALITY,FF_SWISS,NULL);
       print->hfont10=CreateFont(print->ppiy/10,0,0,0,FW_LIGHT,0,0,0,
-        ANSI_CHARSET,OUT_TT_PRECIS,CLIP_DEFAULT_PRECIS,
+        RUSSIAN_CHARSET,OUT_TT_PRECIS,CLIP_DEFAULT_PRECIS,
         PROOF_QUALITY,FF_SWISS,NULL);
       if (print->hfont6==NULL)
         print->hfont6=(HFONT)GetStockObject(SYSTEM_FONT);
@@ -596,12 +596,12 @@
       SetTextAlign(print->dc,TA_TOP|TA_CENTER);
       // Calculate height of title and info lines on the paper.
       SelectObject(print->dc,print->hfont6);
-      if (GetTextExtentPoint32(print->dc,"Page",4,&extent)==0)
+      if (GetTextExtentPoint32(print->dc,"Стр.",4,&extent)==0)
         print->extratop=print->ppiy/4;
       else
         print->extratop=extent.cy+print->ppiy/16;
       SelectObject(print->dc,print->hfont10);
-      if (GetTextExtentPoint32(print->dc,"Page",4,&extent)==0)
+      if (GetTextExtentPoint32(print->dc,"Стр.",4,&extent)==0)
         print->extrabottom=print->ppiy/6;
       else
         print->extrabottom=extent.cy+print->ppiy/24;
@@ -680,7 +680,7 @@
   nx=(width-px-2*print->border)/(NDOT*dx+3*dx);
   ny=(height-py-2*print->border)/(NDOT*dy+3*dy);
   if (nx<print->redundancy+1 || ny<3 || nx*ny<2*print->redundancy+2) {
-    Reporterror("Printable area is too small, reduce borders or block size");
+    Reporterror("Область печати слишком мала, уменьшите границы или размер точки");
     Stopprinting(print);
     return; };
   // Calculate final size of the bitmap where I will draw the image.
@@ -712,14 +712,14 @@
     print->hbmp=CreateDIBSection(print->dc,pbmi,DIB_RGB_COLORS,
       (void **)&(print->dibbits),NULL,0);
     if (print->hbmp==NULL || print->dibbits==NULL) {
-      Reporterror("Low memory, can't print");
+      Reporterror("Недостаточно памяти (ОЗУ), не удаётся осуществить печать");
       Stopprinting(print);
       return;
     }; }
   else {                               // Save to bitmap
     print->drawbits=(uchar *)GlobalAlloc(GMEM_FIXED,width*height);
     if (print->drawbits==NULL) {
-      Reporterror("Low memory, can't create bitmap");
+      Reporterror("Недостаточно памяти (ОЗУ), не удаётся создать изображение");
       return;
     };
   };
@@ -757,7 +757,7 @@
     if (pdevnames!=NULL)
       GlobalUnlock(pagesetup.hDevNames);
     if (success<=0) {
-      Reporterror("Unable to print");
+      Reporterror("Не удаётся осуществить печать");
       Stopprinting(print);
       return; };
     print->startdoc=1;
@@ -786,7 +786,7 @@
     return; };
   // Report page.
   npages=(print->datasize+print->pagesize-1)/print->pagesize;
-  sprintf(s,"Processing page %i of %i...",print->frompage+1,npages);
+  sprintf(s,"Обработка стр. %i из %i...",print->frompage+1,npages);
   Message(s,0);
   // Get frequently used variables.
   dx=print->dx;
@@ -809,7 +809,7 @@
   if (print->outbmp[0]=='\0') {
     success=StartPage(print->dc);
     if (success<=0) {
-      Reporterror("Unable to print");
+      Reporterror("Не удаётся осуществить печать");
       Stopprinting(print);
       return;
     };
@@ -928,12 +928,12 @@
     if (print->printheader) {
       // Print title at the top of the page.
       Filetimetotext(&print->modified,ts,sizeof(ts));
-      n=sprintf(s,"%.64s [%s, %i bytes] - page %i of %i",
+      n=sprintf(s,"%.64s [%s, %i байт] - стр. %i из %i",
         print->superdata.name,ts,print->origsize,print->frompage+1,npages);
       SelectObject(print->dc,print->hfont6);
       TextOut(print->dc,print->borderleft+width/2,print->bordertop,s,n);
       // Print info at the bottom of the page.
-      n=sprintf(s,"Recommended scanner resolution %i dots per inch",
+      n=sprintf(s,"Рекомендованное разрешение сканера: %i точек на дюйм",
         max(print->ppix*3/dx,print->ppiy*3/dy));
       SelectObject(print->dc,print->hfont10);
       TextOut(print->dc,
@@ -959,7 +959,7 @@
     hbmpfile=CreateFile(path,GENERIC_WRITE,0,NULL,
       CREATE_ALWAYS,FILE_ATTRIBUTE_NORMAL,NULL);
     if (hbmpfile==INVALID_HANDLE_VALUE) {
-      Reporterror("Unable to create bitmap file");
+      Reporterror("Не удаётся создать файл изображения");
       Stopprinting(print);
       return; };
     // Create and save bitmap file header.
@@ -988,7 +988,7 @@
     };
     CloseHandle(hbmpfile);
     if (success==0) {
-      Reporterror("Unable to save bitmap");
+      Reporterror("Не удаётся сохранить изображение");
       Stopprinting(print);
       return;
     };
diff -u -N paperbak-1.10.src/README.md PaperBack-1.20.RA0193(RU).src/README.md
--- paperbak-1.10.src/README.md	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/README.md	2014-06-25 22:28:10.692630000 +0400
@@ -3,7 +3,7 @@
 
 This goal of this project is to:
 
-1) document the process by which Paperbak is built
+1) document the process by which Paperback is built
 2) fix its crypto implementation
 
 The upstream source of this application is:
@@ -54,9 +54,9 @@
 HKEY_LOCAL_MACHINE -> System -> CurrentControlSet -> Control -> Session Manager -> Environment -> PATH
 Now prepend the path C:\Borland\BCC55\Bin
 
-5) Place this source code in a path without spaces (i.e. C:\paperbak), then build it:
+5) Place this source code in a path without spaces (i.e. C:\paperback), then build it:
 
-make -f paperbak.mak
+make -f paperback.mak
 
 Changelog
 ===
diff -u -N paperbak-1.10.src/Resource.h PaperBack-1.20.RA0193(RU).src/Resource.h
--- paperbak-1.10.src/Resource.h	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/Resource.h	2014-06-25 22:28:10.694632900 +0400
@@ -20,8 +20,9 @@
 #define OPT_BORDER     3107
 #define OPT_AUTOSAVE   3108
 #define OPT_HIQ        3109
-#define OPT_ENCRYPT    3110
-#define OPT_OPENTEXT   3111
+#define OPT_BROKEN     3110
+#define OPT_ENCRYPT    3111
+#define OPT_OPENTEXT   3112
 #define OPT_OK         IDOK
 #define OPT_CANCEL     IDCANCEL
 
diff -u -N paperbak-1.10.src/Resource.rc PaperBack-1.20.RA0193(RU).src/Resource.rc
--- paperbak-1.10.src/Resource.rc	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/Resource.rc	2014-06-25 22:28:10.696634400 +0400
@@ -104,70 +104,69 @@
 
 MENU_MAIN MENU
 {
- POPUP "&File"
+ POPUP "&Файл"
  {
-  MENUITEM "&Open bitmap",M_FILE_OPEN
-  MENUITEM "Save to bitmap",M_FILE_SAVEBMP
+  MENUITEM "&Открыть изображение",M_FILE_OPEN
+  MENUITEM "Сохранить в изображение",M_FILE_SAVEBMP
   MENUITEM SEPARATOR
-  MENUITEM "&Select source", M_FILE_SELECT
-  MENUITEM "&Acquire", M_FILE_ACQUIRE
+  MENUITEM "&Выбор сканера", M_FILE_SELECT
+  MENUITEM "&Сканирование", M_FILE_ACQUIRE
   MENUITEM SEPARATOR
-  MENUITEM "Page se&tup", M_FILE_PAGE
-  MENUITEM "&Print", M_FILE_PRINT
+  MENUITEM "&Настройка страницы", M_FILE_PAGE
+  MENUITEM "&Печать", M_FILE_PRINT
   MENUITEM SEPARATOR
-  MENUITEM "&Exit\tAlt+X", M_FILE_EXIT
+  MENUITEM "&Выход\tAlt+X", M_FILE_EXIT
  }
- POPUP "&Help"
+ POPUP "&Помощь"
  {
-  MENUITEM "&About", M_HELP_ABOUT
+  MENUITEM "&О программе", M_HELP_ABOUT
  }
 }
 
-
-DIALOG_ABOUT DIALOG 32, 32, 200, 169
+DIALOG_ABOUT DIALOG 32, 32, 200, 189
 STYLE   WS_VISIBLE | WS_CLIPSIBLINGS | DS_3DLOOK
-CAPTION "About Paper Backup"
+CAPTION "О программе PaperBack"
 FONT 8, "MS Sans Serif"
 {
- LTEXT "Text", ABOUT_TEXT, 5, 5, 190, 140, WS_BORDER | SS_CENTER
- DEFPUSHBUTTON "OK", ABOUT_OK, 75, 150, 50, 14
+ LTEXT "Text", ABOUT_TEXT, 5, 5, 190, 160, WS_BORDER | SS_CENTER
+ DEFPUSHBUTTON "OK", ABOUT_OK, 75, 170, 50, 14
 }
 
-
-DIALOG_OPTIONS DIALOG 32, 32, 255, 140
+DIALOG_OPTIONS DIALOG 32, 32, 255, 163
 STYLE   DS_MODALFRAME | WS_POPUP | WS_VISIBLE | WS_CAPTION | WS_SYSMENU | DS_3DLOOK
-CAPTION "Options"
+CAPTION "Опции"
 FONT 8, "MS Sans Serif"
 {
- GROUPBOX "Printing", -1, 6, 6, 118, 128, BS_GROUPBOX | WS_GROUP
- LTEXT "Dot density", -1, 16, 22, 42, 9
+ GROUPBOX "Печать", -1, 6, 6, 118, 128, BS_GROUPBOX | WS_GROUP
+ LTEXT "Плотность тчк.", -1, 16, 22, 42, 9
  COMBOBOX OPT_DENSITY, 64, 20, 49, 114, CBS_DROPDOWNLIST | WS_TABSTOP
- LTEXT "Dot size", -1, 16, 41, 42, 9
+ LTEXT "Размер тчк.", -1, 16, 41, 42, 9
  COMBOBOX OPT_DOTSIZE, 64, 39, 49, 114, CBS_DROPDOWNLIST | WS_TABSTOP
- LTEXT "Compression", -1, 16, 60, 42, 9
+ LTEXT "Сжатие", -1, 16, 60, 42, 9
  COMBOBOX OPT_COMPRESS, 64, 58, 49, 114, CBS_DROPDOWNLIST | WS_TABSTOP
- LTEXT "Redundancy", -1, 16, 79, 42, 9
+ LTEXT "Избыточн.", -1, 16, 79, 42, 9
  COMBOBOX OPT_REDUND, 64, 77, 49, 114, CBS_DROPDOWNLIST | WS_TABSTOP
- CHECKBOX "Header and footer", OPT_HEADER, 16, 97, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
- CHECKBOX "Border around the page", OPT_BORDER, 16, 114, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
- GROUPBOX "Decoding", -1, 131, 6, 118, 51, BS_GROUPBOX | WS_GROUP
- CHECKBOX "Autosave complete files", OPT_AUTOSAVE, 141, 20, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
- CHECKBOX "Determine best quality", OPT_HIQ, 141, 37, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
- GROUPBOX "Encryption", -1, 131, 64, 118, 51, BS_GROUPBOX | WS_GROUP
- CHECKBOX "Encrypt data", OPT_ENCRYPT, 141, 78, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
- CHECKBOX "Password in open text", OPT_OPENTEXT, 141, 95, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
- DEFPUSHBUTTON "OK", OPT_OK, 131, 120, 56, 14
- PUSHBUTTON "Cancel", OPT_CANCEL, 193, 120, 56, 14
+ CHECKBOX "Заголовки (верх и низ)", OPT_HEADER, 16, 97, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
+ CHECKBOX "Рамка страницы", OPT_BORDER, 16, 114, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
+ GROUPBOX "Декодирование", -1, 131, 6, 118, 73, BS_GROUPBOX | WS_GROUP
+ CHECKBOX "Автосохранение", OPT_AUTOSAVE, 141, 23, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
+ CHECKBOX "Автовыбор качества", OPT_HIQ, 141, 40, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
+ CHECKBOX "Принимать \"битые\" стр.", OPT_BROKEN, 141, 57, 100, 12, BS_AUTOCHECKBOX | WS_TABSTOP
+ GROUPBOX "Шифрование", -1, 131, 83, 118, 51, BS_GROUPBOX | WS_GROUP
+ CHECKBOX "Шифровать данные", OPT_ENCRYPT, 141, 97, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
+ CHECKBOX "Открытый пароль", OPT_OPENTEXT, 141, 114, 90, 12, BS_AUTOCHECKBOX | WS_TABSTOP
+ DEFPUSHBUTTON "OK", OPT_OK, 131, 143, 56, 14
+ PUSHBUTTON "Cancel", OPT_CANCEL, 193, 143, 56, 14
 }
 
-DIALOG_CONFIRM DIALOG 32, 32, 194, 93
+DIALOG_CONFIRM DIALOG 32, 32, 195, 94
 STYLE DS_MODALFRAME | WS_POPUP | WS_VISIBLE | WS_CAPTION | WS_SYSMENU | DS_3DLOOK
-CAPTION "AES data encryption"
+CAPTION "Шифрование AES-192"
 FONT 8, "MS Sans Serif"
 {
- LTEXT "Data will be encrypted. Please enter password:", PAS_TEXT, 9, 6, 160, 9
+ LTEXT "Данные будут зашифрованы. Введите пароль:", PAS_TEXT, 9, 6, 160, 9
  EDITTEXT PAS_ENTER, 21, 19, 166, 14
- LTEXT "Confirm password:", -1, 9, 39, 120, 9
+ LTEXT "Подтвердите пароль:", -1, 9, 39, 120, 9
  EDITTEXT PAS_CONFIRM, 21, 52, 166, 14
  DEFPUSHBUTTON "OK", PAS_OK, 70, 73, 56, 14
  PUSHBUTTON "Cancel", PAS_CANCEL, 132, 73, 56, 14
@@ -175,12 +174,11 @@
 
 DIALOG_PASSWORD DIALOG 32, 32, 194, 60
 STYLE DS_MODALFRAME | WS_POPUP | WS_VISIBLE | WS_CAPTION | WS_SYSMENU | DS_3DLOOK
-CAPTION "Data encrypted"
+CAPTION "Данные зашифрованы"
 FONT 8, "MS Sans Serif"
 {
- LTEXT "Please enter password:", PAS_TEXT, 9, 6, 100, 9
+ LTEXT "Введите пароль:", PAS_TEXT, 9, 6, 100, 9
  EDITTEXT PAS_ENTER, 21, 19, 166, 14
  DEFPUSHBUTTON "OK", PAS_OK, 70, 40, 56, 14
  PUSHBUTTON "Cancel", PAS_CANCEL, 132, 40, 56, 14
 }
-
diff -u -N paperbak-1.10.src/Scanner.cpp PaperBack-1.20.RA0193(RU).src/Scanner.cpp
--- paperbak-1.10.src/Scanner.cpp	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/Scanner.cpp	2014-06-25 22:28:10.699639300 +0400
@@ -36,7 +36,7 @@
 #include "twain.h"
 #pragma hdrstop
 
-#include "paperbak.h"
+#include "paperback.h"
 #include "resource.h"
 
 static HINSTANCE htwaindll;            // Handle of TWAIN_32.DLL
@@ -127,13 +127,13 @@
     strncpy(inbmp,path,sizeof(inbmp));
     inbmp[sizeof(inbmp)-1]='\0'; };
   fnsplit(inbmp,NULL,NULL,fil,ext);
-  sprintf(s,"Reading %s%s...",fil,ext);
+  sprintf(s,"Считывание %s%s...",fil,ext);
   Message(s,0);
   Updatebuttons();
   // Open file and verify that this is the valid bitmap of known type.
   f=fopen(inbmp,"rb");
   if (f==NULL) {                       // Unable to open file
-    sprintf(s,"Unable to open %s%s",fil,ext);
+    sprintf(s,"Не удаётся открыть %s%s",fil,ext);
     Reporterror(s);
     return -1; };
   // Reading 100-MB bitmap may take many seconds. Let's inform user by changing
@@ -142,7 +142,7 @@
   i=fread(buf,1,sizeof(buf),f);
   SetCursor(prevcursor);
   if (i!=sizeof(buf)) {                // Unable to read file
-    sprintf(s,"Unable to read %s%s",fil,ext);
+    sprintf(s,"Не удаётся считать %s%s",fil,ext);
     Reporterror(s);
     fclose(f); return -1; };
   pbfh=(BITMAPFILEHEADER *)buf;
@@ -155,7 +155,7 @@
     pbih->biWidth<128 || pbih->biWidth>32768 ||
     pbih->biHeight<128 || pbih->biHeight>32768
   ) {                                  // Invalid bitmap type
-    sprintf(s,"Unsupported bitmap type: %s%s",fil,ext);
+    sprintf(s,"Неподдерживаемый тип изображения: %s%s",fil,ext);
     Reporterror(s);
     fclose(f); return -1; };
   // Allocate buffer and read file.
@@ -163,13 +163,13 @@
   size=ftell(f)-sizeof(BITMAPFILEHEADER);
   data=(uchar *)GlobalAlloc(GMEM_FIXED,size);
   if (data==NULL) {                    // Unable to allocate memory
-    Reporterror("Low memory");
+    Reporterror("Недостаточно памяти (ОЗУ)");
     fclose(f); return -1; };
   fseek(f,sizeof(BITMAPFILEHEADER),SEEK_SET);
   i=fread(data,1,size,f);
   fclose(f);
   if (i!=size) {                       // Unable to read bitmap
-    sprintf(s,"Unable to read %s%s",fil,ext);
+    sprintf(s,"Не удаётся считать %s%s",fil,ext);
     Reporterror(s);
     GlobalFree((HGLOBAL)data);
     return -1; };
@@ -232,7 +232,7 @@
     DG_CONTROL,DAT_IDENTITY,MSG_OPENDS,(TW_MEMREF)&source);
   if (result!=TWRC_SUCCESS) {
     // Unable to open source. The message is usually, but not always, correct.
-    Reporterror("There are no scanner devices on the system");
+    Reporterror("Не обнаружено сканирующих устройств в системе");
     return -1; };
   interf.ShowUI=1;
   interf.ModalUI=0;
@@ -242,7 +242,7 @@
   if (result!=TWRC_SUCCESS) {
     dsmentry(&appid,NULL,              // Unable to enable, go back to state 3
       DG_CONTROL,DAT_IDENTITY,MSG_CLOSEDS,(TW_MEMREF)&source);
-    Reporterror("Unable to open scanner");
+    Reporterror("Не удаётся открыть сканер");
     return -1; };
   twainstate=5;
   return 0;
diff -u -N paperbak-1.10.src/Service.cpp PaperBack-1.20.RA0193(RU).src/Service.cpp
--- paperbak-1.10.src/Service.cpp	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/Service.cpp	2014-06-25 22:28:10.701641700 +0400
@@ -36,7 +36,7 @@
 #include "twain.h"
 #pragma hdrstop
 
-#include "paperbak.h"
+#include "paperback.h"
 #include "resource.h"
 
 
@@ -64,10 +64,10 @@
   ofn.lStructSize=min(OPENFILENAME_SIZE_VERSION_400,sizeof(ofn));
   ofn.hwndOwner=hwmain;
   ofn.hInstance=hinst;
-  ofn.lpstrFilter="Any file (*.*)\0*.*\0\0";
+  ofn.lpstrFilter="Любой файл (*.*)\0*.*\0\0";
   ofn.lpstrFile=infile;
   ofn.nMaxFile=sizeof(infile);
-  ofn.lpstrTitle="Open file to print";
+  ofn.lpstrTitle="Открытие файла для печати";
   ofn.Flags=OFN_FILEMUSTEXIST|OFN_LONGNAMES;
   return (GetOpenFileName(&ofn)==0?-1:0);
 };
@@ -75,7 +75,7 @@
 // Asks user to enter the name of the output data file (outfile). Returns 0 on
 // success and -1 on error or if user pressed Cancel.
 int Selectoutfile(char defname[64]) {
-  char s[65],drv[MAXDRIVE],dir[MAXDIR],fil[MAXFILE],ext[MAXEXT];
+  char s[65],drv[MAXDRIVE],dir[MAXDIR],fil[MAXFILE],ext[MAXEXT],extflt[MAXEXT];
   OPENFILENAME ofn;
   // Split old path into components.
   fnsplit(outfile,drv,dir,fil,ext);
@@ -88,10 +88,11 @@
   ofn.lStructSize=min(OPENFILENAME_SIZE_VERSION_400,sizeof(ofn));
   ofn.hwndOwner=hwmain;
   ofn.hInstance=hinst;
-  ofn.lpstrFilter="Any file (*.*)\0*.*\0\0";
+  strncpy(extflt,ext,MAXEXT); extflt[MAXEXT]='\0';
+  ofn.lpstrFilter=extflt;
   ofn.lpstrFile=outfile;
   ofn.nMaxFile=sizeof(outfile);
-  ofn.lpstrTitle="Save file as";
+  ofn.lpstrTitle="Сохранить файл как";
   ofn.Flags=OFN_LONGNAMES;
   return (GetSaveFileName(&ofn)==0?-1:0);
 };
@@ -104,10 +105,10 @@
   ofn.lStructSize=min(OPENFILENAME_SIZE_VERSION_400,sizeof(ofn));
   ofn.hwndOwner=hwmain;
   ofn.hInstance=hinst;
-  ofn.lpstrFilter="Bitmap file (*.bmp)\0*.bmp\0Any file (*.*)\0*.*\0\0";
+  ofn.lpstrFilter="Файл изображения (*.bmp)\0*.bmp\0Любой файл (*.*)\0*.*\0\0";
   ofn.lpstrFile=inbmp;
   ofn.nMaxFile=sizeof(inbmp);
-  ofn.lpstrTitle="Open bitmap";
+  ofn.lpstrTitle="Открыть изображение";
   ofn.Flags=OFN_FILEMUSTEXIST|OFN_LONGNAMES;
   ofn.lpstrDefExt="bmp";
   return (GetOpenFileName(&ofn)==0?-1:0);
@@ -129,10 +130,10 @@
   ofn.lStructSize=min(OPENFILENAME_SIZE_VERSION_400,sizeof(ofn));
   ofn.hwndOwner=hwmain;
   ofn.hInstance=hinst;
-  ofn.lpstrFilter="Bitmap file (*.bmp)\0*.bmp\0Any file (*.*)\0*.*\0\0";
+  ofn.lpstrFilter="Файл изображения (*.bmp)\0*.bmp\0Любой файл (*.*)\0*.*\0\0";
   ofn.lpstrFile=outbmp;
   ofn.nMaxFile=sizeof(outbmp);
-  ofn.lpstrTitle="Save bitmap as";
+  ofn.lpstrTitle="Сохранить изображение как";
   ofn.Flags=OFN_LONGNAMES;
   ofn.lpstrDefExt="bmp";
   return (GetSaveFileName(&ofn)==0?-1:0);
@@ -166,7 +167,7 @@
 // file is posted and -1 if queue is full.
 int Addfiletoqueue(char *path,int isbitmap) {
   if (nqueue>=NQUEUE) {
-    Reporterror("Input queue full");
+    Reporterror("Входная очередь переполнена");
     return -1; }
   else {
     strcpy(queue[nqueue].path,path);
diff -u -N paperbak-1.10.src/upstream.html PaperBack-1.20.RA0193(RU).src/upstream.html
--- paperbak-1.10.src/upstream.html	2013-07-18 07:56:52.000000000 +0400
+++ PaperBack-1.20.RA0193(RU).src/upstream.html	2014-06-25 22:28:10.703644600 +0400
@@ -11,6 +11,36 @@
  href="http://www.ollydbg.de">OllyDbg</a>, presents his new open source
 joke:</span><big><br>
 <br>
+<big>PAPERBACK v1.10</big></big><br>
+<br><span style="font-weight: bold;">Updated by Michael Mohr</span><br><br><a href="http://ollydbg.de/Paperbak/paperbak-1.10.exe.zip"><span style="font-weight: bold;">Download PaperBack v1.10</span></a><br><a href="http://ollydbg.de/Paperbak/paperbak-1.10.src.zip"><span style="font-weight: bold;">Download sources v1.10</span></a><br><br>PaperBack version 1.00 does not implement AES encryption properly.&nbsp; Specifically:<br><br>a)
+The key used for (en|de)cryption in version 1.00 provides at most an
+effective key strength of less than 50 bits (and likely far less,
+perhaps on the order of 15-25 bits, depending on password quality)
+instead of the expected 256 bits.&nbsp; Version 1.10 derives the encryption
+key from the password via key stretching, significantly improving key
+strength.&nbsp; This change causes a small delay in the encryption step.<br>
+<br>b) PaperBack version 1.0 implements ECB mode symmetric encryption.&nbsp;
+This mode is subject to a watermark attack and leaks information about
+the encrypted data.&nbsp; Version 1.00 changes the encryption mode to CBC,
+which mitigates this attack.<br>
+<br>2) AES key length is now selectable in paperbak.h via
+AESKEYLEN.&nbsp; I suggest not using AES-256, as its key schedule is known
+to be substandard.&nbsp; See Bruce Schneier's website for details.&nbsp; For the
+moment I've switched PaperBack to use AES-192.<br>
+<br>3) The included libraries are now packaged as binary
+.lib files.&nbsp; Instructions for rebuilding them from source are included
+in README.md from the PaperBack source code.<br><span style="font-style: italic;"><br>(Olly:
+mea maxima culpa. I am no cryptanalytic, and wrote Paperback quickly
+and without much thinking about the strength of the code. Btw, can this
+new release read old bitmaps?)<br></span><br><hr style="width: 100%; height: 2px;"><br><big><big>PAPERBACK v1.00</big></big><br><br>
+<a href="http://ollydbg.de/Paperbak/PaperBak.exe" style="color: rgb(204, 0, 0); font-weight: bold;">Download
+PaperBack v1.00</a><br style="color: rgb(204, 0, 0); font-weight: bold;">
+<a href="http://ollydbg.de/Paperbak/Paperbak.zip" style="color: rgb(204, 0, 0); font-weight: bold;">Download
+sources v1.00</a><br style="color: rgb(204, 0, 0); font-weight: bold;">
+<a href="http://ollydbg.de/Paperbak/gpl.txt" style="color: rgb(204, 0, 0); font-weight: bold;">Read
+GNU GPL</a><br>
+<br>
+<br>
 <big>PAPERBACK v1.00</big></big><br>
 <br>
 <a href="PaperBak.exe" style="color: rgb(204, 0, 0); font-weight: bold;">Download
